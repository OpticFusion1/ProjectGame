// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package ProjectGameVer3;

import java.util.ArrayList;
import java.util.Collections;
import java.util.InputMismatchException;
import java.util.Scanner;



/************************************************************/
/**
 * 
 */
public class PotionSelector extends Encounter {
	
	/**
	 * Default constructor as in Encounter.
	 * @param teamMonsters
	 * @param teamHeros
	 */
	public PotionSelector(ArrayList<Monster> teamMonsters, ArrayList<Hero> teamHeros) {
		super(teamMonsters, teamHeros);
		this.teamHeros=teamHeros;
		this.potionsDisplay=new String[5];
		this.potions.add(new Health());
		this.potions.add(new Poison());
		this.potions.add(new AttackMagnet());
		this.potions.add(new Boost());
	}
	/**
	 * This is an array of strings to display the choices(the potions are masked with other names) for the user.
	 */
	public String[] potionsDisplay;

	/**
	 * The array list which contains all the potions initialized.
	 */
	public ArrayList<Potions> potions=new ArrayList<Potions>();
	/**
	 * The list of heroes is used to operate on the heroes in the memory outside static.
	 */
	private ArrayList<Hero> teamHeros;
	/**
	 * The drinker of the potion.
	 */
	private Hero drinker;

	/**
	 * This variable is not used, but for further improvement of game this could be used to operate on
	 * the list of monsters outside the static memory.
	 */
	private ArrayList<Monster> teamMonsters;
	/**
	 * This function displays the choices for the user
	 */
	
	public String[] dispPotionChoice() {
		int p = this.genRandHero() ;
		this.drinker=this.teamHeros.get(p);
		for(int i=0;i<5;i++) {
		this.potionsDisplay[i]=new String("What does " +this.drinker.name +" drink?\n1.Green Gooey potion\n2.Glittering potion"
				+"\n3.Bright Red potion\n4.Monster purple potion");
		}
		return this.potionsDisplay;
	}

	/**
	 * This is the core function for the user to select a potion.
	 */
	public ArrayList<Hero> potionChoice() {
		Collections.shuffle(this.potions); //shuffles the potion list for randomness
		Scanner input = new Scanner(System.in);
        int option;
		boolean j;
		do {
			j = false;
		try {
			option = input.nextInt();
			potions.get(option-1).drink(drinker);
			if(drinker.getHp()<=0) {
				System.out.println(drinker.getName()+" faints due to potion");
	    	}
			}catch(IndexOutOfBoundsException e ) {
	 		  System.out.println("Input a number between 1-"+potions.size());
	 		  j=true;
			}catch(InputMismatchException k) {
				j=true;
				System.out.println("Input a number between 1-"+potions.size());
				input.next();
			}
		
		}while(j);	
		return this.teamHeros;
	}
};
