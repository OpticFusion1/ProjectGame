// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package ProjectGameVer3;

import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.Scanner;


/************************************************************/
/**
 * The core class calls all required classes for the game to function.
 */
public class Game {
	/**
	 * Each game has an array of 5 encounters.
	 */
	private Encounter[] encounter= new Encounter[5];
	/**
	 * To initialize the teams.
	 */
	private InitTeams initTeams= new InitTeams();
	/**
	 * this variable is used to initialize the story line.
	 */
	private StoryLine storyLine;
	/**
	 * A variable used to initialize turn for Potions.
	 */
	private PotionSelector potionSelector;

	/**
	 * This is the main function to start the game where if the user chooses to play the game will call
	 * InitTeams class, encounter class, potionsSelector and StoryLine class.
	 */
	public void run() {
		char option;
		Scanner in = new Scanner(System.in);
		System.out.println("***************************************************************");
		System.out.println("*       Welcome to the Mists of Abandoned EtherDungeons       *");
		System.out.println("***************************************************************");
		System.out.println("Mist covers the EtherDungeons from when the curse of wicked wizard Etherian was cast");
		System.out.println("-----------------------------------------------------------------");
		System.out.println("Are you ready to take on the challenge to restore glory to this place and clear the mist ?");
		System.out.println("A.Bring it ON !!");
		System.out.println("B.Help, let me know the game");
		System.out.println("C.I'm scared and want to exit");
		option = in.next().charAt(0);
		boolean l;//variable to ensure loop when encountered with Exceptions.
		do {
			try {
				l =false; 
				switch(option) {
					case 'A':
						ArrayList <Hero> herosList  = this.initTeams.selectHeroes();
						storyLine = new StoryLine(herosList);
						storyLine.genStory();
						for(int i=0 ; i < 5 ; i++) {
							ArrayList <Monster> monstersList= this.initTeams.randMonster();
							encounter[i] = new Encounter(monstersList,herosList);
						}
						System.out.println("-----------------------------------------------------------------");
						for(int j=0 ; j< encounter.length; j++) {
							System.out.println("Welcome to stage: "+(j+1));
							System.out.println("-----------------------------------------------------------------");
							System.out.println(storyLine.getStoryList()[j]);
							potionSelector = new PotionSelector(encounter[j].getTeamMonsters(),encounter[j].getTeamHeros());
							System.out.println("+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++");
							System.out.println(potionSelector.dispPotionChoice()[j]);
							encounter[j].setTeamHeros(potionSelector.potionChoice());
							System.out.println(storyLine.getStoryList()[j+5]);
							System.out.println("+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++");
							while(encounter[j].getWinIndicator() == 0) {
								encounter[j].monsterChance();
								System.out.println("Press Enter to Continue");
								in.nextLine();
								System.out.println("-----------------------------------------------------------------");
								encounter[j].dispData();
								System.out.println("-----------------------------------------------------------------");
								encounter[j].heroChance();
								
							}
							if(encounter[j].getWinIndicator() ==1) {
								for (int i=0;i<encounter[j].getTeamHeros().size();i++) {
									encounter[j].getTeamHeros().get(i).stageRevive();
								}
								
							}
							if(encounter[j].getWinIndicator() ==2) {
								System.out.println("*********************");
								System.out.println("* Game Over Sucker! *");
								System.out.println("*********************");
								break;
							}
						}
						if(encounter[4].getWinIndicator() ==1) {
							System.out.println("*****************************************************************************");
							System.out.println("* Congratulations! You freed EtherDungeons from the mists of etharian curse *");
							System.out.println("*****************************************************************************");
						}
						break;
					case 'B':
						StoryLine help = new StoryLine();
						help.genHelp();
						l=true;
						System.out.println("-------------------------------------------------------------------------------------------------------");
						System.out.println("Are you ready to take on the challenge to restore glory to this place and clear the mist ?");
						System.out.println("A.Bring it ON !!");
						System.out.println("B.Help, let me know the game more");
						System.out.println("C.I'm scared and want to exit");
						option = in.next().charAt(0);
						break;
					case 'C':
						System.out.println("***********************************************************");
						System.out.println("* Ha haah haa , Coward.See you in your dreams muhahaaha!! *");
						System.out.println("***********************************************************");
						break;
					default:
						 System.out.println("Input a Alphabet amongst A, B or C");
						 l= true;
						 option = in.next().charAt(0);
			   		break;
						}
				}catch(InputMismatchException k) {
					l=true;
					System.out.println("Input a Alphabet amongst A, B or C");
					in.next();
				}
		}while(l);
	}
};
