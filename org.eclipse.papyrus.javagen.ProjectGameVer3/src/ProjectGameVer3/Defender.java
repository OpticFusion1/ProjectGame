// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package ProjectGameVer3;

/************************************************************/
/**
 * 
 */
public class Defender extends Hero {
	
	/**
	 * Default parameters for a Defender.
	 */
	public Defender() {
		super();
		this.name ="Defender";
		this.attackPower = 20;
		this.maxHP = 80;
		this.hp = this.maxHP;    
		this.attackChance =0.5;
	}

	/**
	 * Initializes a Defender with an attack power, name and Max Health points.
	 * @param attackPower
	 * @param name   
	 * @param maxHP
	 */
	public Defender(int attackPower, String name, int maxHP) {
		super(attackPower, name, maxHP);
		this.name+=" the Defender";
	}

	/**
	 * Initializes a Defender with a name and default parameters.
	 * @param name
	 */
	public Defender(String name) {
		super(name);
		this.name+=" the Defender";
		this.attackPower = 20;
		this.maxHP = 80;
		this.hp = this.maxHP;
		this.attackChance =0.5;
	}
	@Override
	/**
	 * The function is nearly same except that the retaliation function is added when the Defender is still 
	 * alive(Health points >0).
	 * @param opponent 
	 */
	public void getAttacked(Role opponent) {
		double r = Math.random();
		if( r >= this.dodgeChance) {
		this.hp = this.hp - opponent.attackPower;
		System.out.println(opponent.name+ " whacks "+ this.name+" by:"+opponent.attackPower+" HP");
		if (this.hp <=0) {
			this.hp = 0;
			System.out.println(this.name+" faints");
			}else {
					opponent.retalliation(this);
			}
		}else {
				System.out.println(opponent.name+ " tries to whacks "+ this.name);
				System.out.println("but it's dodged by "+ this.name);
				opponent.retalliation(this);
			}
	}
};
