// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package ProjectGame;

import java.util.ArrayList;
import java.util.Scanner;

import ProjectGame.InitTeams;

/************************************************************/
/**
 * 
 */
public class Encounter {
	/**
	 * 
	 */
	private ArrayList<Monster> teamMonsters;
	private ArrayList<Hero> teamHeros;
	private  ArrayList<Hero> faintHeros= new ArrayList<Hero>();
	public static int encounterNum=0;
	public int indicatorWin;

	/**
	 * 
	 */
	public Encounter(ArrayList<Monster> teamMonsters,ArrayList<Hero> teamHeros) {
		encounterNum+=1;
		this.teamMonsters = teamMonsters;
		this.teamHeros =teamHeros;
		this.indicatorWin=0;
	}

	/**
	 * 
	 */
	public void heroChance() {
		double r; // random number
        r = this.teamHeros.size()*Math.random(); //3 as its the max index of heros 
        int p =(int) Math.floor(r);
        if (this.teamHeros.get(p).hp >= 0){
	       if(this.teamMonsters.size()!= 0) {
	    	   if (this.teamHeros.get(p) instanceof Cleric) {
	    		   System.out.println("+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++");
		    	   System.out.println("Who does" +this.teamHeros.get(p).getName() +" heal?");
		    	   for(int i=0;i<this.teamHeros.size();i++) {
		   				System.out.println((i+1)+". "+this.teamHeros.get(i).getName());
		    	   }
		    	   Scanner input = new Scanner(System.in);
			        char option;
					option = input.next().charAt(0);
					switch(option) {
					case '1':
						this.teamHeros.get(p).attack(this.teamHeros.get(0));
						break;
					case '2':
						this.teamHeros.get(p).attack(this.teamHeros.get(1));
						break;
					case '3':
						this.teamHeros.get(p).attack(this.teamHeros.get(2));
						break;
					case '4':
						this.teamHeros.get(p).attack(this.teamHeros.get(3));
						break;
		    	   
		    	   
						}
				   }
				else {
					System.out.println("+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++");
			        System.out.println("Who does the " +this.teamHeros.get(p).getName() +" attack?") ;
			        for (int i=0;i<this.teamMonsters.size() ;i++) {
						System.out.println((i+1)+". "+this.teamMonsters.get(i).getName());
			        }
			        Scanner input = new Scanner(System.in);
			        char option;
					option = input.next().charAt(0);
					switch(option) {
					case '1':
						this.teamHeros.get(p).attack(this.teamMonsters.get(0));
						break;
					case '2':
						this.teamHeros.get(p).attack(this.teamMonsters.get(1));
						break;
					case '3':
						this.teamHeros.get(p).attack(this.teamMonsters.get(2));
						break;
					case '4':
						this.teamHeros.get(p).attack(this.teamMonsters.get(3));
						break;
					case '5':
						this.teamHeros.get(p).attack(this.teamMonsters.get(4));
						break;
					case '6':
						this.teamHeros.get(p).attack(this.teamMonsters.get(5));
						break;
					}
					
				}
	       }
	       
	       for (int i=0;i<this.teamMonsters.size() ;i++) {	
		       if(this.teamMonsters.get(i).hp <=0) {
					this.teamMonsters.remove(i);
					if(this.teamMonsters.size() == 0) {
						this.indicatorWin = 1;
						System.out.println("The vailiant efforts by you get the heros through the stage ");
					}
		       }
	       }
        }else {
        	heroChance();
        }
	}
	
		
	
	public void monstersChance() {
		double r1; // random number
        r1 = this.teamHeros.size()*Math.random(); //6 can be modified to a liking of your choice 
        int p1 =(int) Math.floor(r1);
        double r2; // random number
        r2 = this.teamMonsters.size()*Math.random(); //6 can be modified to a liking of your choice 
        int p2 =(int) Math.floor(r2);
        if(this.teamMonsters.size()!= 0 && this.teamHeros.size()!= 0) {
			this.teamMonsters.get(p2).attack(this.teamHeros.get(p1));
			System.out.println("+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++");
			System.out.println("The monster"+this.teamMonsters.get(p2).name+" attacks "+this.teamHeros.get(p1).name);
			if(this.teamHeros.get(p1).hp <=0 && !this.faintHeros.contains(this.teamHeros.get(p1))) {
				this.faintHeros.add(this.teamHeros.get(p1));
				if(this.faintHeros.size() == 4) {
					this.indicatorWin = 2;
					System.out.println("The monsters win, you fail to break the curse ... Ha hahahahah ha !!");
				}
			
			}
        }
	}
		
	
	public void choice() {
				System.out.println("The HP is as follows :");
				for (int i=0;i<this.teamHeros.size() ;i++) {
					System.out.println(this.teamHeros.get(i).getName()+"\t"+this.teamHeros.get(i));
				}
				for (int i=0;i<this.teamMonsters.size() ;i++) {
					System.out.println(this.teamMonsters.get(i).getName()+"\t"+this.teamMonsters.get(i));
				}
			
	}

	/**
	 * @return the teamMonsters
	 */
	public ArrayList<Monster> getTeamMonsters() {
		return teamMonsters;
	}

	/**
	 * @param teamMonsters the teamMonsters to set
	 */
	public void setTeamMonsters(ArrayList<Monster> teamMonsters) {
		this.teamMonsters = teamMonsters;
	}

	/**
	 * @return the teamHeros
	 */
	public ArrayList<Hero> getTeamHeros() {
		return teamHeros;
	}

	/**
	 * @param teamHeros the teamHeros to set
	 */
	public void setTeamHeros(ArrayList<Hero> teamHeros) {
		this.teamHeros = teamHeros;
	}

	/**
	 * @return the faintHeros
	 */
	public ArrayList<Hero> getFaintHeros() {
		return faintHeros;
	}

	/**
	 * @param faintHeros the faintHeros to set
	 */
	public void setFaintHeros(ArrayList<Hero> faintHeros) {
		this.faintHeros = faintHeros;
	}
	
	
}
